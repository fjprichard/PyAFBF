{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "\n# Anisotropic textures from field deformations\n\n.. codeauthor:: Fr\u00e9d\u00e9ric Richard <frederic.richard_at_univ-amu.fr>\n\nIn this example, we show how to simulate\n:term:`anisotropic<isotropy>` textures from the deformation\nof an :term:`isotropic<isotropy>` random field.\n\nGiven a fractional Brownian field $X$ and  an affine transformation\n$T$, the transformed field is defined by composition\n\n\\begin{align}Y = X \\circ T.\\end{align}\n\nThe anisotropic texture is obtained by simulation of $Y$.\n\n<div class=\"alert alert-info\"><h4>Note</h4><p>This approach could also be applied to more generic afbf.</p></div>\n\n.. seealso::\n   Deformed fields have been of interest in several studies;\n   see for instance :cite:p:`Guyon2000`.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "import numpy as np\nfrom afbf import coordinates, tbfield\n\n# Define a fractional Brownian field.\nX = tbfield()\n# Define an affine transform.\nT = np.array([[1, 0], [2, 1]], dtype=int)\n\n# Define a uniform grid.\ncoord = coordinates(256)\n# Simulate the field without transformation.\nn0 = int(np.random.randn())\nnp.random.seed(n0)\ny0 = X.Simulate()\n\n# Apply the coordinate transform to the grid.\ncoord.ApplyAffineTransform(T)\n# Simulate the field with transformation (with a same seed).\nnp.random.seed(n0)\ny = X.Simulate(coord)\n\n# Display of simulations.\ny.name = 'Simulation of the deformed field.'\ny.Display(1)\n\ny0.name = 'Simulation of the undeformed field.'\ny0.Display(2)"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.13"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}